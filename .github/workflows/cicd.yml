
name: Spring Boot & Java CI/CD with Gradle

#Trigger
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    #jdk setting
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

      ## create application-dev.yml
    - name: make application-dev.yml
      if: contains(github.ref, 'main') # branch가 main 일 때
      run: |
        cd ./src/main/resources
        touch ./application-dev.yml
        echo "${{ secrets.YML_DEV }}" > ./application-dev.yml
      shell: bash

      ## gradle build
    - name: Build with Gradle
      run: ./gradlew build -x test -x ktlintCheck -x ktlintTestSourceSetCheck -x ktlintMainSourceSetCheck -x ktlintKotlinScriptCheck
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

      ## docker build & push to production
    - name: Docker build & push to prod
      if: contains(github.ref, 'main')
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }} .
        docker push ${{ secrets.DOCKER_REPO }}

      ## deploy to production
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      id: deploy-prod
      if: contains(github.ref, 'main')
      with:
        host: ${{ secrets.HOST_PROD }}
        username: ec2-user
        key: ${{ secrets.PRIVATE_KEY }}
        envs: GITHUB_SHA
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}
          docker-compose up -d
          docker image prune -f